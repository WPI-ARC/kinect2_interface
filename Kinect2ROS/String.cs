using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

//////////////////////////////////////////////////
/////    AUTOGENERATED MESSAGE DEFINITION    /////
//////////////////////////////////////////////////
/////         DO NOT MODIFY BY HAND!         /////
//////////////////////////////////////////////////

namespace ROS_CS
{
    namespace std_msgs
    {
        public class String : ROS_CS.Core.BaseMessage
        {
            public readonly string typeID = "String";
            public readonly string md5sum = "992ce8a1687cec8c8bd883ec73ca41d1";
            public string data;

            public String ()
            {
                data = "";
            }

            public override string ToString ()
            {
                return ROS_CS.Core.PrettyPrinter.PrettyPrint(ToStringRaw());
            }

            public override string ToStringRaw ()
            {
                string string_rep = typeID + ":\n";
                string_rep += "data: " + data + "\n";
                return string_rep;
            }

            public override void Serialize(MemoryStream stream)
            {
                System.Byte[] data_bytes = System.Text.Encoding.UTF8.GetBytes(data);
                System.Byte[] data_len_bytes = BitConverter.GetBytes((System.UInt32)data_bytes.Length);
                stream.Write(data_len_bytes, 0, data_len_bytes.Length);
                stream.Write(data_bytes, 0, data_bytes.Length);
            }

            public override int Deserialize(System.Byte[] serialized)
            {
                return Deserialize(serialized, 0);
            }

            public override int Deserialize(System.Byte[] serialized, int startIndex)
            {
                int curIndex = startIndex;
                System.UInt32 data_len = BitConverter.ToUInt32(serialized, curIndex);
                curIndex += BitConverter.GetBytes(data_len).Length;
                data = System.Text.Encoding.UTF8.GetString(serialized, curIndex, (int)data_len);
                curIndex += (int)data_len;
                return (curIndex - startIndex);
            }

        }
    }
}
